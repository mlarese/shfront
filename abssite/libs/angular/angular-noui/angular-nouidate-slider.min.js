'use strict';

angular.module('nouidateslider', []).directive('dateslider', function ($rootScope,$translate,$log) {
    var today=new Date();
    var todayYear=today.getFullYear();
    var months  =['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

    return {
        restrict: 'EA',
        scope: {
            callback: '@',
            type: '@',
            years: '@',
            ngFrom: '=',
            ngTo: '='
        },
        link: function (scope, element, attrs) {

            var callback, fromParsed, parsedValue, slider, toParsed;
            slider = $(element);
            callback = scope.callback ? scope.callback : 'slide';
            var sStart = 1;
            var sEnd = 12;
            scope.years = scope.years || 3;
            scope.type = scope.type || 'year';

            if (scope.type == 'year') {
                sStart = todayYear - scope.years;
                sEnd = todayYear + 1;
            } else if (scope.type == 'month') {
                sStart = 1;
                sEnd = 12;
            } else if (scope.type == 'day') {
                sStart = 1;
                sEnd = 31;
            }

            fromParsed = null;
            toParsed = null;

            slider.addClass(scope.type + '-slider');
            slider.noUiSlider({
                start: [sStart, sEnd],
                step: 1,
                connect: true,
                range: {
                    min: [sStart],
                    max: [sEnd]
                }
            });
            var pips = [];
            for (var i = sStart; i <= sEnd; i++)  pips.push(i);
            slider.noUiSlider_pips({
                mode: 'values',
                values: pips,
                density: 100
            });

            if (scope.type == 'month'){
                $('.noUi-value.noUi-value-horizontal.noUi-value-large', slider).each(function () {
                    var val = $(this).html() * 1;
                    $(this).html(  $translate.instant(  months[val - 1] )  );
                });
            }

            var $lowHandler=$('.noUi-handle-lower',slider) ;
            var $upperHandler=$('.noUi-handle-upper',slider) ;

            $lowHandler.on('click',function(){
                return scope.$apply(function () {
                    scope.ngTo=scope.ngFrom;
                });

            })

            $upperHandler.on('click',function(){
                return scope.$apply(function () {
                    scope.ngFrom=scope.ngTo;
                });

            })

            slider.on(callback, function () {
                var from, to, _ref;
                _ref = slider.val(), from = _ref[0], to = _ref[1];
                fromParsed = parseFloat(from);
                toParsed = parseFloat(to);
                return scope.$apply(function () {
                    scope.ngFrom = fromParsed;
                    return scope.ngTo = toParsed;
                });
            });
            scope.$watch('ngFrom', function (newVal, oldVal) {
                $log.info('dateslider.$watch.ngFrom'+newVal)
                if (newVal !== fromParsed) {
                    return slider.val([ newVal,  null   ]);
                }
            });
            return scope.$watch('ngTo', function (newVal, oldVal) {

                if (newVal !== toParsed) {
                    return slider.val([ null, newVal ]);
                }
            });

        }
    };
});